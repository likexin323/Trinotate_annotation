# Trinotate_annotation_note
de nove transcriptome annotation

before you start:
download and intall software as fellows: Trinity|TransDecoder|CD-HIT|NCBI-Blast+|HMMER (new and old version)|sqlite

1. download and install Trinotate (https://github.com/Trinotate/Trinotate/archive/Trinotate-v3.1.1.tar.gz)

tar zxvf Trinotate-v3.1.1.tar.gz
(此软件不需要设置环境变了，因为包含了大量的Perl预写脚本，直接设置路径调取)

#安装sqlite软件，需要进行一系列设置
#下载(https://www.sqlite.org/download.html)或者(https://www.sqlite.org/2018/sqlite-autoconf-3230100.tar.gz)
#tar zxvf sqlite-autoconf-3230100.tar.gz
#cd sqlite-autoconf-3230100
#./configure >>>> make

2. 安装Trinota软件所需的所有组件 (均需要提交教育邮箱地址验证，以下是直接的下载地址)
### signalP v4 (http://www.cbs.dtu.dk/download/C794ABB8-643C-11E8-9420-A999465A7DCF/)
#需要对signalp中的语句进行修改
#(以下引自官网https://trinotate.github.io/)
#You should edit the following line to read like so, increasing the max number of entries that can be processed:
my $MAX_ALLOWED_ENTRIES=2000000;  # default is only 10000
#also update the path to where you have the signalP software installed eg.:
$ENV{SIGNALP} = '/usr/local/src/signalp-4.1';
(将默认值10000修改成2000000, 同时需要将signalp的具体地址进行替代)

### tmhmm v2 (http://www.cbs.dtu.dk/download/A878AF6E-643B-11E8-AED3-5983465A7DCF/)
#(以下引自官网https://trinotate.github.io/)
#You might need to edit the header lines of the scripts 'tmhmm' and 'tmhmmformat.pl' to read:
#!/usr/bin/env perl (软件中自带的脚本是#!/usr/local/bin/env perl, 需要删除/local)

### RNAMMER (http://www.cbs.dtu.dk/download/EC65393A-643C-11E8-ABD7-5F9B465A7DCF/)
#(以下引自官网https://trinotate.github.io/)
#mkdir RNAMMER
#cd RNAMMER
#mv /path/to/rnammer-1.2.src.tar.Z .
#tar zxvf rnammer-1.2.src.tar.Z
#RNAMMER requires the older version of hmmsearch (http://eddylab.org/software/hmmer/2.3/hmmer-2.3.tar.gz)
(下载hmmer老版本，后在src文件中将hmmsearch改名成hmmsearch2，同时也可以将整个文件改名成hmmsearch2)
#对 rnammer 脚本进行编辑
$HMMSEARCH_BINARY = "/path/to/hmmsearch2";
(此处需要注意, 是要将hmmsearch2的文件位置连同文件名一同输入, eg. /home/tong/local/hmmsearch2/src/hmmsearch2)
# update the INSTALL_PATH setting:
$INSTALL_PATH = "/dir/where/you/installed/RNAMMER";
(此处将rnammer软件完全路径输入进行替代)
#对 core-rnammer 脚本进行编辑
#There are two places where you'll find '--cpu 1 --compat'.  Remove the '--cpu1' at each of these places, and retain the '--compat'.
#(直接将--cpu 1删除即可)



3. 利用Trinotate进行创建数据库 (Trinotate relies heavily on SwissProt and Pfam)
*Trinotate软件的最大弊端就是只能依赖swissprot和pfam两个库, 无法加载Nr和Nt两个数据库/(ㄒoㄒ)/~~
官网推荐范例：TRINOTATE_HOME/admin/Build_Trinotate_Boilerplate_SQLite_db.pl  Trinotate
实际操作：/home/tong/local/Trinotate-Trinotate-v3.1.1/admin/Build_Trinotate_Boilerplate_SQLite_db.pl  Trinotate
之后系统自动下载uniprot和Pfam两个大文件
Trinotate.sqlite
uniprot_sprot.pep
Pfam-A.hmm.gz

4. Swissprot和Pfam数据库本地化 (也可以从NCBI下载Nr和Nt数据库，同样实现本地化)
makeblastdb -in uniprot_sprot.pep -dbtype prot
gunzip Pfam-A.hmm.gz
hmmpress Pfam-A.hmm

5. 执行blast本地搜索(必需)
(非常值得注意，此处的Trinity.fasta文件最好使用原始文件|但是必须执行去冗余, CD-HIT 0.95|，不要进行剪辑，如删除过长的header)
# search Trinity transcripts
blastx -query Trinity.fasta -db uniprot_sprot.pep -num_threads 8 -max_target_seqs 1 -outfmt 6 > blastx.outfmt6
# search Transdecoder-predicted proteins
blastp -query transdecoder.pep -db uniprot_sprot.pep -num_threads 8 -max_target_seqs 1 -outfmt 6 > blastp.outfmt6

6. HMMER搜索 (必需)
hmmscan (HMMER) command:
hmmscan --cpu 8 --domtblout TrinotatePFAM.out Pfam-A.hmm transdecoder.pep > pfam.log
(CPU核数目可以经行调配)

7. signalP预测信号肽 (选配)
signalp -f short -n signalp.out transdecoder.pep

8. tmhmm 跨膜区预测 (选配)
tmhmm --short < transdecoder.pep > tmhmm.out

9. RNAy预测 (选配)
官网推荐范例：$TRINOTATE_HOME/util/rnammer_support/RnammerTranscriptome.pl --transcriptome Trinity.fasta --path_to_rnammer /usr/bin/software/rnammer_v1.2/rnammer
实际操作：/home/tong/local/Trinotate-Trinotate-v3.1.1/util/rnammer_support/RnammerTranscriptome.pl --transcriptome Trinity.fasta  --path_to_rnammer /home/tong/local/RNAMMER

10. 整理以上结果, 导入数据库合并
# 首先利用Trinity中perl脚本将拼接结果进行提取ORF
官网推荐案例：$TRINITY_HOME/util/support_scripts/get_Trinity_gene_to_trans_map.pl Trinity.fasta >  Trinity.fasta.gene_trans_map
实际操作：/home/tong/local/trinityrnaseq-Trinity-v2.6.5/util/support_scripts/get_Trinity_gene_to_trans_map.pl Trinity.fasta >  Trinity.fasta.gene_trans_map

# 将提取ORF的数据导入Trinotate.sqlite数据库
Trinotate Trinotate.sqlite init --gene_trans_map Trinity.fasta.gene_trans_map --transcript_fasta Trinity.fasta --transdecoder_pep transdecoder.pep

# 依次导入blast|Pfam|tmhmm|signalp|结果
Trinotate Trinotate.sqlite LOAD_swissprot_blastp blastp.outfmt6
Trinotate Trinotate.sqlite LOAD_swissprot_blastx blastx.outfmt6
Trinotate Trinotate.sqlite LOAD_pfam TrinotatePFAM.out
Trinotate Trinotate.sqlite LOAD_tmhmm tmhmm.out
Trinotate Trinotate.sqlite LOAD_signalp signalp.out

11. 生成终极版的注释报告 (这个xls表格非常弱，也很凌乱，仍需要深入整理)
Trinotate Trinotate.sqlite report > trinotate_annotation_report.xls
